token literal names:
null
'#'
'void'
'int'
'char'
'double'
'string'
'struct'
'enum'
'delegate'
'true'
'false'
null
null
'while'
'for'
'new'
'delete'
'return'
'print'
'read'
'assert'
'delay'
'public'
'private'
'load'
'import'
'.'
','
':'
';'
'='
'*'
'/'
'%'
'->'
'+'
'-'
'!'
'&&'
'||'
'['
']'
'('
')'
'{'
'}'
'=='
'!='
'<'
'>'
'<='
'>='
null
null
null
null
null
null
null
null
'define'
null
'elif'
null
null
null
null

token symbolic names:
null
SHARP
VOID
INT
CHAR
DOUBLE
STRING
STRUCT
ENUM
DELEGATE
TRUE
FALSE
IF
ELSE
WHILE
FOR
NEW
DELETE
RETURN
PRINT
READ
ASSERT
DELAY
PUBLIC
PRIVATE
LOAD
IMPORT
DOT
COMMA
COL
SEMI_COL
ASSIGN
STAR
SLASH
PERCENT
ARROW
PLUS
MINUS
NOT
AND
OR
L_BRACKET
R_BRACKET
L_PAR
R_PAR
L_CURL
R_CURL
EQUAL
NOT_EQUAL
LESS_THAN
GREATER_THAN
LESS_EQ_THAN
GREATER_EQ_THAN
ID
INT_CONSTANT
REAL_CONSTANT
CHAR_CONSTANT
STRING_CONSTANT
SL_COMMENT
ML_COMMENT
BLANKS
DIR_DEFINE
DIR_IF
DIR_ELIF
DIR_ELSE
DIR_WHITESPACE
DIR_ML_COMMENT
DIR_NEWLINE

rule names:
preprocessorDirective
preprocessorExpression


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 69, 15, 4, 2, 9, 2, 4, 3, 9, 3, 3, 2, 3, 2, 3, 2, 3, 2, 5, 2, 11, 10, 2, 3, 3, 3, 3, 3, 3, 2, 2, 4, 2, 4, 2, 3, 3, 2, 12, 13, 2, 13, 2, 10, 3, 2, 2, 2, 4, 12, 3, 2, 2, 2, 6, 7, 7, 63, 2, 2, 7, 11, 7, 55, 2, 2, 8, 9, 7, 64, 2, 2, 9, 11, 5, 4, 3, 2, 10, 6, 3, 2, 2, 2, 10, 8, 3, 2, 2, 2, 11, 3, 3, 2, 2, 2, 12, 13, 9, 2, 2, 2, 13, 5, 3, 2, 2, 2, 3, 10]