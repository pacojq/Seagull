//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Parser/Seagull.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419



    using System.Collections.Generic;
    
	using Seagull.AST;

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class SeagullLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		ID=1, INT_CONSTANT=2, REAL_CONSTANT=3, CHAR_CONSTANT=4, SL_COMMENT=5, 
		ML_COMMENT=6, BLANKS=7;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"DIGIT", "LETTER", "REAL", "ID", "INT_CONSTANT", "REAL_CONSTANT", "CHAR_CONSTANT", 
		"SL_COMMENT", "ML_COMMENT", "BLANKS"
	};


	public SeagullLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public SeagullLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "ID", "INT_CONSTANT", "REAL_CONSTANT", "CHAR_CONSTANT", "SL_COMMENT", 
		"ML_COMMENT", "BLANKS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Seagull.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static SeagullLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\t', '\x87', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x4', '\x5', '\x4', '\x1D', '\n', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x6', '\x4', '!', '\n', '\x4', '\r', '\x4', '\xE', '\x4', '\"', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\a', '\x4', '(', '\n', '\x4', '\f', 
		'\x4', '\xE', '\x4', '+', '\v', '\x4', '\x5', '\x4', '-', '\n', '\x4', 
		'\x3', '\x5', '\x3', '\x5', '\x5', '\x5', '\x31', '\n', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\a', '\x5', '\x36', '\n', '\x5', '\f', 
		'\x5', '\xE', '\x5', '\x39', '\v', '\x5', '\x3', '\x6', '\x3', '\x6', 
		'\x3', '\x6', '\a', '\x6', '>', '\n', '\x6', '\f', '\x6', '\xE', '\x6', 
		'\x41', '\v', '\x6', '\x5', '\x6', '\x43', '\n', '\x6', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x5', '\a', 'I', '\n', '\a', '\x3', '\a', 
		'\x3', '\a', '\x5', '\a', 'M', '\n', '\a', '\x3', '\a', '\x3', '\a', '\x5', 
		'\a', 'Q', '\n', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x5', '\b', 'Z', '\n', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x5', '\b', '\x63', '\n', '\b', '\x3', '\t', '\x3', '\t', 
		'\x3', '\t', '\x3', '\t', '\a', '\t', 'i', '\n', '\t', '\f', '\t', '\xE', 
		'\t', 'l', '\v', '\t', '\x3', '\t', '\x5', '\t', 'o', '\n', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\a', '\n', 'w', '\n', '\n', '\f', '\n', '\xE', '\n', 'z', '\v', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\v', '\x6', '\v', '\x82', '\n', '\v', '\r', '\v', '\xE', '\v', '\x83', 
		'\x3', '\v', '\x3', '\v', '\x4', 'j', 'x', '\x2', '\f', '\x3', '\x2', 
		'\x5', '\x2', '\a', '\x2', '\t', '\x3', '\v', '\x4', '\r', '\x5', '\xF', 
		'\x6', '\x11', '\a', '\x13', '\b', '\x15', '\t', '\x3', '\x2', '\t', '\x3', 
		'\x2', '\x32', ';', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x3', '\x2', 
		'\x33', ';', '\x4', '\x2', 'G', 'G', 'g', 'g', '\a', '\x2', ')', ')', 
		'^', '^', 'p', 'p', 't', 't', 'v', 'v', '\x4', '\x3', '\f', '\f', '\xF', 
		'\xF', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', '\"', '\x2', '\x96', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\x17', '\x3', '\x2', '\x2', '\x2', '\x5', '\x19', '\x3', '\x2', 
		'\x2', '\x2', '\a', ',', '\x3', '\x2', '\x2', '\x2', '\t', '\x30', '\x3', 
		'\x2', '\x2', '\x2', '\v', '\x42', '\x3', '\x2', '\x2', '\x2', '\r', 'P', 
		'\x3', '\x2', '\x2', '\x2', '\xF', '\x62', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x64', '\x3', '\x2', '\x2', '\x2', '\x13', 'r', '\x3', '\x2', 
		'\x2', '\x2', '\x15', '\x81', '\x3', '\x2', '\x2', '\x2', '\x17', '\x18', 
		'\t', '\x2', '\x2', '\x2', '\x18', '\x4', '\x3', '\x2', '\x2', '\x2', 
		'\x19', '\x1A', '\t', '\x3', '\x2', '\x2', '\x1A', '\x6', '\x3', '\x2', 
		'\x2', '\x2', '\x1B', '\x1D', '\x5', '\v', '\x6', '\x2', '\x1C', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\x1C', '\x1D', '\x3', '\x2', '\x2', '\x2', 
		'\x1D', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x1E', ' ', '\a', '\x30', 
		'\x2', '\x2', '\x1F', '!', '\x5', '\x3', '\x2', '\x2', ' ', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '!', '\"', '\x3', '\x2', '\x2', '\x2', '\"', ' ', 
		'\x3', '\x2', '\x2', '\x2', '\"', '#', '\x3', '\x2', '\x2', '\x2', '#', 
		'-', '\x3', '\x2', '\x2', '\x2', '$', '%', '\x5', '\v', '\x6', '\x2', 
		'%', ')', '\a', '\x30', '\x2', '\x2', '&', '(', '\x5', '\x3', '\x2', '\x2', 
		'\'', '&', '\x3', '\x2', '\x2', '\x2', '(', '+', '\x3', '\x2', '\x2', 
		'\x2', ')', '\'', '\x3', '\x2', '\x2', '\x2', ')', '*', '\x3', '\x2', 
		'\x2', '\x2', '*', '-', '\x3', '\x2', '\x2', '\x2', '+', ')', '\x3', '\x2', 
		'\x2', '\x2', ',', '\x1C', '\x3', '\x2', '\x2', '\x2', ',', '$', '\x3', 
		'\x2', '\x2', '\x2', '-', '\b', '\x3', '\x2', '\x2', '\x2', '.', '\x31', 
		'\a', '\x61', '\x2', '\x2', '/', '\x31', '\x5', '\x5', '\x3', '\x2', '\x30', 
		'.', '\x3', '\x2', '\x2', '\x2', '\x30', '/', '\x3', '\x2', '\x2', '\x2', 
		'\x31', '\x37', '\x3', '\x2', '\x2', '\x2', '\x32', '\x36', '\a', '\x61', 
		'\x2', '\x2', '\x33', '\x36', '\x5', '\x3', '\x2', '\x2', '\x34', '\x36', 
		'\x5', '\x5', '\x3', '\x2', '\x35', '\x32', '\x3', '\x2', '\x2', '\x2', 
		'\x35', '\x33', '\x3', '\x2', '\x2', '\x2', '\x35', '\x34', '\x3', '\x2', 
		'\x2', '\x2', '\x36', '\x39', '\x3', '\x2', '\x2', '\x2', '\x37', '\x35', 
		'\x3', '\x2', '\x2', '\x2', '\x37', '\x38', '\x3', '\x2', '\x2', '\x2', 
		'\x38', '\n', '\x3', '\x2', '\x2', '\x2', '\x39', '\x37', '\x3', '\x2', 
		'\x2', '\x2', ':', '\x43', '\a', '\x32', '\x2', '\x2', ';', '?', '\t', 
		'\x4', '\x2', '\x2', '<', '>', '\t', '\x2', '\x2', '\x2', '=', '<', '\x3', 
		'\x2', '\x2', '\x2', '>', '\x41', '\x3', '\x2', '\x2', '\x2', '?', '=', 
		'\x3', '\x2', '\x2', '\x2', '?', '@', '\x3', '\x2', '\x2', '\x2', '@', 
		'\x43', '\x3', '\x2', '\x2', '\x2', '\x41', '?', '\x3', '\x2', '\x2', 
		'\x2', '\x42', ':', '\x3', '\x2', '\x2', '\x2', '\x42', ';', '\x3', '\x2', 
		'\x2', '\x2', '\x43', '\f', '\x3', '\x2', '\x2', '\x2', '\x44', 'Q', '\x5', 
		'\a', '\x4', '\x2', '\x45', 'Q', '\x5', '\v', '\x6', '\x2', '\x46', 'I', 
		'\x5', '\a', '\x4', '\x2', 'G', 'I', '\x5', '\v', '\x6', '\x2', 'H', '\x46', 
		'\x3', '\x2', '\x2', '\x2', 'H', 'G', '\x3', '\x2', '\x2', '\x2', 'I', 
		'J', '\x3', '\x2', '\x2', '\x2', 'J', 'L', '\t', '\x5', '\x2', '\x2', 
		'K', 'M', '\a', '/', '\x2', '\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 
		'L', 'M', '\x3', '\x2', '\x2', '\x2', 'M', 'N', '\x3', '\x2', '\x2', '\x2', 
		'N', 'O', '\x5', '\v', '\x6', '\x2', 'O', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'P', '\x44', '\x3', '\x2', '\x2', '\x2', 'P', '\x45', '\x3', '\x2', '\x2', 
		'\x2', 'P', 'H', '\x3', '\x2', '\x2', '\x2', 'Q', '\xE', '\x3', '\x2', 
		'\x2', '\x2', 'R', 'S', '\a', ')', '\x2', '\x2', 'S', 'T', '\v', '\x2', 
		'\x2', '\x2', 'T', '\x63', '\a', ')', '\x2', '\x2', 'U', 'V', '\a', ')', 
		'\x2', '\x2', 'V', 'W', '\a', '^', '\x2', '\x2', 'W', 'Y', '\x3', '\x2', 
		'\x2', '\x2', 'X', 'Z', '\t', '\x6', '\x2', '\x2', 'Y', 'X', '\x3', '\x2', 
		'\x2', '\x2', 'Z', '[', '\x3', '\x2', '\x2', '\x2', '[', '\x63', '\a', 
		')', '\x2', '\x2', '\\', ']', '\a', ')', '\x2', '\x2', ']', '^', '\a', 
		'^', '\x2', '\x2', '^', '_', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x5', 
		'\v', '\x6', '\x2', '`', '\x61', '\a', ')', '\x2', '\x2', '\x61', '\x63', 
		'\x3', '\x2', '\x2', '\x2', '\x62', 'R', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'U', '\x3', '\x2', '\x2', '\x2', '\x62', '\\', '\x3', '\x2', '\x2', '\x2', 
		'\x63', '\x10', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\a', '\x31', 
		'\x2', '\x2', '\x65', '\x66', '\a', '\x31', '\x2', '\x2', '\x66', 'j', 
		'\x3', '\x2', '\x2', '\x2', 'g', 'i', '\v', '\x2', '\x2', '\x2', 'h', 
		'g', '\x3', '\x2', '\x2', '\x2', 'i', 'l', '\x3', '\x2', '\x2', '\x2', 
		'j', 'k', '\x3', '\x2', '\x2', '\x2', 'j', 'h', '\x3', '\x2', '\x2', '\x2', 
		'k', 'n', '\x3', '\x2', '\x2', '\x2', 'l', 'j', '\x3', '\x2', '\x2', '\x2', 
		'm', 'o', '\t', '\a', '\x2', '\x2', 'n', 'm', '\x3', '\x2', '\x2', '\x2', 
		'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', 'q', '\b', '\t', '\x2', '\x2', 
		'q', '\x12', '\x3', '\x2', '\x2', '\x2', 'r', 's', '\a', '\x31', '\x2', 
		'\x2', 's', 't', '\a', ',', '\x2', '\x2', 't', 'x', '\x3', '\x2', '\x2', 
		'\x2', 'u', 'w', '\v', '\x2', '\x2', '\x2', 'v', 'u', '\x3', '\x2', '\x2', 
		'\x2', 'w', 'z', '\x3', '\x2', '\x2', '\x2', 'x', 'y', '\x3', '\x2', '\x2', 
		'\x2', 'x', 'v', '\x3', '\x2', '\x2', '\x2', 'y', '{', '\x3', '\x2', '\x2', 
		'\x2', 'z', 'x', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', ',', '\x2', 
		'\x2', '|', '}', '\a', '\x31', '\x2', '\x2', '}', '~', '\x3', '\x2', '\x2', 
		'\x2', '~', '\x7F', '\b', '\n', '\x2', '\x2', '\x7F', '\x14', '\x3', '\x2', 
		'\x2', '\x2', '\x80', '\x82', '\t', '\b', '\x2', '\x2', '\x81', '\x80', 
		'\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\x3', '\x2', '\x2', '\x2', 
		'\x83', '\x81', '\x3', '\x2', '\x2', '\x2', '\x83', '\x84', '\x3', '\x2', 
		'\x2', '\x2', '\x84', '\x85', '\x3', '\x2', '\x2', '\x2', '\x85', '\x86', 
		'\b', '\v', '\x2', '\x2', '\x86', '\x16', '\x3', '\x2', '\x2', '\x2', 
		'\x15', '\x2', '\x1C', '\"', ')', ',', '\x30', '\x35', '\x37', '?', '\x42', 
		'H', 'L', 'P', 'Y', '\x62', 'j', 'n', 'x', '\x83', '\x3', '\b', '\x2', 
		'\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
