token literal names:
null
'#'
'void'
'int'
'char'
'double'
'string'
'struct'
'long'
'byte'
'enum'
'delegate'
'null'
'ptr'
'true'
'false'
null
null
'while'
'for'
'in'
'switch'
'case'
'break'
'continue'
'new'
'delete'
'return'
'print'
'read'
'assert'
'delay'
'public'
'protected'
'private'
'friend'
'load'
'import'
'namespace'
'owned'
'is'
'default'
'.'
','
':'
';'
'='
'*'
'/'
'%'
'->'
'?'
'+'
'-'
'++'
'--'
'*='
'/='
'%='
'+='
'-='
'!'
'&&'
'||'
'['
']'
'('
')'
'{'
'}'
'&'
'|'
'^'
'~'
'>>'
'<<'
'=='
'!='
'<'
'>'
'<='
'>='
null
null
null
null
null
null
null
null
null
'define'
null
'elif'
null
null
null
null

token symbolic names:
null
SHARP
VOID
INT
CHAR
DOUBLE
STRING
STRUCT
LONG
BYTE
ENUM
DELEGATE
NULL
PTR
TRUE
FALSE
IF
ELSE
WHILE
FOR
IN
SWITCH
CASE
BREAK
CONTINUE
NEW
DELETE
RETURN
PRINT
READ
ASSERT
DELAY
PUBLIC
PROTECTED
PRIVATE
FRIEND
LOAD
IMPORT
NAMESPACE
OWNED
IS
DEFAULT
DOT
COMMA
COL
SEMI_COL
ASSIGN
STAR
SLASH
PERCENT
ARROW
QUESTION
PLUS
MINUS
PLUS_PLUS
MINUS_MINUS
ASSIGN_MUL
ASSIGN_DIV
ASSIGN_MOD
ASSIGN_SUM
ASSIGN_SUB
NOT
AND
OR
L_BRACKET
R_BRACKET
L_PAR
R_PAR
L_CURL
R_CURL
BIT_AND
BIT_OR
BIT_XOR
BIT_NOT
BIT_RIGHT
BIT_LEFT
EQUAL
NOT_EQUAL
LESS_THAN
GREATER_THAN
LESS_EQ_THAN
GREATER_EQ_THAN
ID
INT_CONSTANT
REAL_CONSTANT
CHAR_CONSTANT
STRING_CONSTANT
BOOLEAN_CONSTANT
SL_COMMENT
ML_COMMENT
BLANKS
DIR_DEFINE
DIR_IF
DIR_ELIF
DIR_ELSE
DIR_WHITESPACE
DIR_ML_COMMENT
DIR_NEWLINE

rule names:
preprocessorDirective
preprocessorExpression


atn:
[3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 3, 99, 15, 4, 2, 9, 2, 4, 3, 9, 3, 3, 2, 3, 2, 3, 2, 3, 2, 5, 2, 11, 10, 2, 3, 3, 3, 3, 3, 3, 2, 2, 4, 2, 4, 2, 3, 3, 2, 16, 17, 2, 13, 2, 10, 3, 2, 2, 2, 4, 12, 3, 2, 2, 2, 6, 7, 7, 93, 2, 2, 7, 11, 7, 84, 2, 2, 8, 9, 7, 94, 2, 2, 9, 11, 5, 4, 3, 2, 10, 6, 3, 2, 2, 2, 10, 8, 3, 2, 2, 2, 11, 3, 3, 2, 2, 2, 12, 13, 9, 2, 2, 2, 13, 5, 3, 2, 2, 2, 3, 10]